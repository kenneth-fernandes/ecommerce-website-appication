# URL of Eureka (Discovery) Server
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

# Application name in order for Discovery Server to identify the client
spring.application.name=api-gateway

server.port=8085

### Logs for understanding the requests made to api-gateway application server
logging.level.root=INFO
# RouteDefinitionLocator - Responsible for the routes and identify the routs for incoming requests
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

### Routes for all services in the project ###
## 1. Product Service routes
spring.cloud.gateway.routes[0].id=product-service
# lb - Load balanced uri to http://product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/product

## 2. Inventory Service routes
spring.cloud.gateway.routes[1].id=inventory-service
# lb - Load balanced uri to http://inventory-service
spring.cloud.gateway.routes[1].uri=lb://inventory-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/inventory

## 3. Order Service routes
spring.cloud.gateway.routes[2].id=order-service
# lb - Load balanced uri to http://order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/order

## 4. Discover Server routes
spring.cloud.gateway.routes[3].id=discovery-server
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[3].filters[0]=SetPath=/

## 4.1. Discover Server Static Resources routes
spring.cloud.gateway.routes[4].id=discovery-server-static
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# Spring Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/e-commerce-app-microservices-spring-boot

# Zipkin
management.endpoints.web.exposure.include=*
management.tracing.sampling.probability=1.0
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Your project setup is incompatible with our requirements due to following reasons:
#
# - Spring Cloud Sleuth is not compatible with this Spring Cloud release train
#
#
# Action:
#
# Consider applying the following actions:
#
# - Migrate from Spring Cloud Sleuth to Micrometer Tracing .
# You can check the Sleuth 3.1 Migration Guide over here [https://github.com/micrometer-metrics/tracing/wiki/Spring-Cloud-Sleuth-3.1-Migration-Guide].
# If you want to disable this check, just set the property [spring.cloud.compatibility-verifier.enabled=false]